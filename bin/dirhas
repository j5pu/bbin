#!/bin/sh

set -eu

rc=0

#######################################
# show usage
# Arguments:
#   1
#######################################
help() {
  test $# -ne 0 || return 0

  case "$1" in
    -h|--help|help) rc=0 ;;
    *) return 0 ;;
  esac

  >&2 cat <<EOF
usage: ${0##*/} [directory...]
   or: [directory...] | ${0##*/}
       ${0##*/} [-h|--help|help]

directory or directories exist and have files, including hidden files and folders or does not exist

Arguments:
  [directory...]      directory or directories (default: cwd) or from stdin if not input

Commands:
   -h, --help, help   display this help and exit.

Returns:
   1 if at least one of directories passed is empty or does not exist

Output:
   Shows empty directories or missing directories to stderr.

Examples:
  $ ${0##*/}
  $ ${0##*/} ~
  $ ${0##*/} foo
  foo
  $ find . -type d | ${0##*/}
  $ mkdir -p /tmp/has{1,2} && touch /tmp/has{1,2}/f; ${0##*/} /tmp/has{1,2}
  $ rm /tmp/has1/*; ${0##*/} /tmp/has{1,2}
EOF
  exit "${rc:-1}"
}

#######################################
# show to stderr and mark exit code
# Arguments:
#   1    directory
#######################################
std() { >&2 echo "$1"; rc=1; }

#######################################
# directory or directories exist and have files, including hidden files and folders or does not exist
# Arguments:
#   1   path/s to directory (default: cwd)
#######################################
main () {
  dir="$(echo "$1" | sed "s|~|${HOME}|")"
  test -d "${dir}" || { std "$1"; return 0; }
  cd "${dir}"
  [ -n "$(find . -mindepth 1 -maxdepth 1)" ] || std "$1"
}

help "$@"

if test $# -ne 0; then
  for arg; do
    main "${arg}"
  done
elif test -s /dev/stdin; then
  while read -r arg; do
    main "${arg}"
  done < /dev/stdin
else
  main .
fi

exit $rc
